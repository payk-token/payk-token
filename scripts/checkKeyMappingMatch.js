import Web3 from "web3";
import { keccak256, defaultAbiCoder } from "ethers/lib/utils.js";
import dotenv from "dotenv";
import { createRequire } from "module";
const require = createRequire(import.meta.url);
const registryAbi = require("../artifacts/contracts/PhoneMappingRegistry.sol/PhoneMappingRegistry.json");

dotenv.config({ path: ".env.keys" });

const web3 = new Web3("https://alfajores-forno.celo-testnet.org");

// üîê –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á —ñ –Ω–æ–º–µ—Ä –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
const PRIVATE_KEY = process.env.PRIVATE_KEY_380989737510;
const PHONE = "+380989737510";
const SALT = "CELO";

// üîÅ –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–¥—Ä–µ—Å—É –∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
const wallet = web3.eth.accounts.privateKeyToAccount(PRIVATE_KEY);
const derivedAddress = wallet.address;
console.log(`üîê Address from private key: ${derivedAddress}`);

// üì≤ –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–¥—Ä–µ—Å—É –∑ –º–∞–ø—ñ–Ω–≥—É
const phoneHash = keccak256(defaultAbiCoder.encode(["string", "string"], [SALT, PHONE]));
const contractAddress = process.env.PHONE_MAPPING_REGISTRY_ADDRESS || "0x300e7d225A141A20e00C1F375Dd99a32b0329758";
const phoneRegistry = new web3.eth.Contract(registryAbi.abi, contractAddress);

const mappedAddress = await phoneRegistry.methods.getMapping(phoneHash).call();
console.log(`üì≤ Address from mapping for ${PHONE}: ${mappedAddress}`);

// ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ
if (derivedAddress.toLowerCase() === mappedAddress.toLowerCase()) {
  console.log("‚úÖ Match! –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –º–∞–ø—ñ–Ω–≥—É");
} else {
  console.log("‚ùå –ù–µ –∑–±—ñ–≥–∞—î—Ç—å—Å—è! –Ü–Ω—à–∞ –∞–¥—Ä–µ—Å–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ —Ä–µ—î—Å—Ç—Ä—ñ");
}